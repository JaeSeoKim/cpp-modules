#include "Brain.hpp"

Brain::Brain()
{
	const std::string ideas[] = {
		"ğŸ¥±",
		"ğŸ¥µ",
		"ğŸ˜¢",
		"ğŸ˜±",
		"ğŸ¥¶",
		"ğŸ¤¯",
		"ğŸ¤©",
		"ğŸ¥°",
		"ğŸ¥³",
		"ğŸ¥´",
		"ğŸ¤¤",
		"ğŸ¤¢",
		"ğŸ¤§",
		"ğŸ¤®",
		"ğŸ¤¡",
		"ğŸ¤ ",
		"ğŸ¤¥",
		"ğŸ¤¤",
	};

	std::cout << "Constructor Brain:";
	for (int i = 0; i < 100; ++i)
	{
		this->ideas[i] = ideas[rand() % (sizeof(ideas) / sizeof(std::string))];
		std::cout << " " << this->ideas[i];
	}
	std::cout << std::endl;
}

Brain::Brain(Brain const &other)
{
	for (int i = 0; i < 100; ++i)
		this->ideas[i] = other.getIdea(i);
}

Brain &Brain::operator=(Brain const &other)
{
	if (this != &other)
	{
		for (int i = 0; i < 100; ++i)
			this->ideas[i] = other.getIdea(i);
	}
	return *this;
}

Brain::~Brain()
{
	std::cout << "Destructor Brain:";
	for (int i = 0; i < 100; ++i)
	{
		this->ideas[i] = ideas[rand() % (sizeof(ideas) / sizeof(std::string))];
		std::cout << " " << this->ideas[i];
	}
	std::cout << std::endl;
}

std::string const &Brain::getIdea(int index) const
{
	return this->ideas[index];
}
